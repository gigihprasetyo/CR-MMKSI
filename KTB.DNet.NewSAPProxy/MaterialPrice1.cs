
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 12/2/2009
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace KTB.DNet.NewSAPProxy
{

  /// <summary>
  /// Client SAP proxy class
  /// </summary>
  [WebServiceBinding(Name="dummy.Binding", Namespace="urn:sap-com:document:sap:rfc:functions")]
  [Serializable]
  public class MaterialPrice : SAPClient
  {
    /// <summary>
    /// Initializes a new MaterialPrice.
    /// </summary>
    public MaterialPrice(){}

    /// <summary>
    /// Initializes a new MaterialPrice with a new connection based on the specified connection string.
    /// </summary>
    /// <param name="connectionString">A connection string (e.g. RFC or URL) specifying the system where the proxy should connect to.</param>
    public MaterialPrice(string connectionString) : base(connectionString){}

    /// <summary>
    /// Initializes a new MaterialPrice instance and adds it to the given container.
    /// This allows automated connection mananged by VS component designer:
    /// If container is disposed, it will also dispose this SAPClient instance,
    /// which will dispose a contained connection if needed.
    /// </summary>
    /// <param name="container"<The container where the new SAPClient instance is to be added.>/param<
    public MaterialPrice(System.ComponentModel.IContainer container) : base(container) {}    
  
    /// <summary>
    /// Remote Function Module ZKTB_DNET_INQUIRY.  
    /// DNET Inquirty
    /// </summary>
    /// <param name="Order_Item_In">Inquiry item in</param>
    /// <param name="Order_Item_Out">Inquiry item in</param>
    [RfcMethod(AbapName = "ZKTB_DNET_INQUIRY")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZKTB_DNET_INQUIRY",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZKTB_DNET_INQUIRY",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZKTB_DNET_INQUIRY.Response")]
    public virtual void Zktb_Dnet_Inquiry (

     [RfcParameter(AbapName = "ORDER_ITEM_IN",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("ORDER_ITEM_IN", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZKTB_INQ_INTable Order_Item_In,
     [RfcParameter(AbapName = "ORDER_ITEM_OUT",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("ORDER_ITEM_OUT", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZKTB_INQ_OUTTable Order_Item_Out)
    {
        object[]results = null;
        results = this.SAPInvoke("Zktb_Dnet_Inquiry",new object[] {
                            Order_Item_In,Order_Item_Out });
        Order_Item_In = (ZKTB_INQ_INTable) results[0];
        Order_Item_Out = (ZKTB_INQ_OUTTable) results[1];

    }

  } 

}
