
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 11/9/2007
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace KTB.DNet.NewSAPProxy
{
  /// <summary>
  /// A typed collection of ZSPST0028_01 elements.
  /// </summary>
  [Serializable]
  public class ZSPST0028_01Table : SAPTable 
  {
  
    /// <summary>
    /// Returns the element type ZSPST0028_01.
    /// </summary>
    /// <returns>The type ZSPST0028_01.</returns>
    public override Type GetElementType() 
    {
        return (typeof(ZSPST0028_01));
    }

    /// <summary>
    /// Creates an empty new row of type ZSPST0028_01.
    /// </summary>
    /// <returns>The newZSPST0028_01.</returns>
    public override object CreateNewRow()
    { 
        return new ZSPST0028_01();
    }
     
    /// <summary>
    /// The indexer of the collection.
    /// </summary>
    public ZSPST0028_01 this[int index] 
    {
        get 
        {
            return ((ZSPST0028_01)(List[index]));
        }
        set 
        {
            List[index] = value;
        }
    }
        
    /// <summary>
    /// Adds a ZSPST0028_01 to the end of the collection.
    /// </summary>
    /// <param name="value">The ZSPST0028_01 to be added to the end of the collection.</param>
    /// <returns>The index of the newZSPST0028_01.</returns>
    public int Add(ZSPST0028_01 value) 
    {
        return List.Add(value);
    }
        
    /// <summary>
    /// Inserts a ZSPST0028_01 into the collection at the specified index.
    /// </summary>
    /// <param name="index">The zero-based index at which value should be inserted.</param>
    /// <param name="value">The ZSPST0028_01 to insert.</param>
    public void Insert(int index, ZSPST0028_01 value) 
    {
        List.Insert(index, value);
    }
        
    /// <summary>
    /// Searches for the specified ZSPST0028_01 and returnes the zero-based index of the first occurrence in the collection.
    /// </summary>
    /// <param name="value">The ZSPST0028_01 to locate in the collection.</param>
    /// <returns>The index of the object found or -1.</returns>
    public int IndexOf(ZSPST0028_01 value) 
    {
        return List.IndexOf(value);
    }
        
    /// <summary>
    /// Determines wheter an element is in the collection.
    /// </summary>
    /// <param name="value">The ZSPST0028_01 to locate in the collection.</param>
    /// <returns>True if found; else false.</returns>
    public bool Contains(ZSPST0028_01 value) 
    {
        return List.Contains(value);
    }
        
    /// <summary>
    /// Removes the first occurrence of the specified ZSPST0028_01 from the collection.
    /// </summary>
    /// <param name="value">The ZSPST0028_01 to remove from the collection.</param>
    public void Remove(ZSPST0028_01 value) 
    {
        List.Remove(value);
    }

    /// <summary>
    /// Copies the contents of the ZSPST0028_01Table to the specified one-dimensional array starting at the specified index in the target array.
    /// </summary>
    /// <param name="array">The one-dimensional destination array.</param>           
    /// <param name="index">The zero-based index in array at which copying begins.</param>           
    public void CopyTo(ZSPST0028_01[] array, int index) 
    {
        List.CopyTo(array, index);
	}
  }
}
