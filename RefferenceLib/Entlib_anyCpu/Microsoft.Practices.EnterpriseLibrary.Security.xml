<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Security</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationFactory">
            <summary>
            Static factory class used to get instances of a specified IAuthenticationProvider
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationFactory.GetAuthenticationProvider">
            <summary>
            Returns the default IAuthenticationProvider instance. 
            Guaranteed to return an intialized IAuthenticationProvider if no exception thrown
            </summary>
            <returns>Default authentication provider instance.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to create default IAuthenticationProvider</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationFactory.GetAuthenticationProvider(System.String)">
            <summary>
            Returns the named IAuthenticationProvider instance. Guaranteed to return an initialized IAuthenticationProvider if no exception thrown.
            </summary>
            <param name="authenticationProvider">Name defined in configuration for the authentication provider to instantiate</param>
            <returns><see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"></see> created through configuration</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory">
            <summary>
            Provides methods for the creation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</para>
            </summary>
            <param name="context"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> containing the configuration data to use.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.GetAuthenticationProvider">
            <summary>
            Gets the default authentication provider as specified via configuration.
            </summary>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.GetAuthenticationProvider(System.String)">
            <summary>
            Gets the authentication provider with the specified name.
            </summary>
            <param name="authenticationProviderName">The configured name of an authentication provider</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.CreateConfigurationView">
            <summary>
            <para>Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.GetConfigurationType(System.String)">
            <summary>
            <para>Gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="authenticationProviderName"/>.</para>
            </summary>
            <param name="authenticationProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> to create.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthenticationProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationFactory">
            <summary>
            Static factory class used to get instances of a specified IAuthorizationProvider
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationFactory.GetAuthorizationProvider">
            <summary>
            Returns the default IAuthorizationProvider instance. 
            Guaranteed to return an intialized IAuthorizationProvider if no exception thrown
            </summary>
            <returns>Default Authorization provider instance.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to create default IAuthorizationProvider</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationFactory.GetAuthorizationProvider(System.String)">
            <summary>
            Returns the named IAuthorizationProvider instance. Guaranteed to return an initialized IAuthorizationProvider if no exception thrown.
            </summary>
            <param name="authorizationProviderName">Name defined in configuration for the Authorization provider to instantiate</param>
            <returns>Named Authorization provider instance</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory">
            <summary>
            Provides methods for the creation of
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationFactory"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory"/>
            with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.
            </summary>
            <param name="context">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.GetAuthorizationProvider">
            <summary>
            Gets the default authorization provider as specified via configuration.
            </summary>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.GetAuthorizationProvider(System.String)">
            <summary>
            Gets the authorization provider with the specified name.
            </summary>
            <param name="authorizationProviderName">The configured name of an authorization provider</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.CreateConfigurationView">
            <summary>
            <para>Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.GetConfigurationType(System.String)">
            <summary>
            <para>Gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="authorizationProviderName"/>.</para>
            </summary>
            <param name="authorizationProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> to create.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator">
            <summary>
            Represents an operator that performs a logical-AND of its
            contained left and right expressions, but only evaluates
            its second expression if the first expression evaluates to true.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression">
            <summary>
            Represents an operator, operand or expression
            that results in one of two values - true or false.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator"/>
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression,Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator"/>
            class with the specified
            </summary>
            <param name="left">The expression that will be evaluated first.</param>
            <param name="right">The expression that will be evaluated last.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Performs the logical-AND of the left
            and right expressions.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True if both the left and right expressions evaluate to true,
            otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.Left">
            <summary>
            Gets or sets the first expression that will be evaluated -
            the expression to the left of the operator.
            </summary>
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression"/>.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AndOperator.Right">
            <summary>
            Gets or sets the second expression that will be evaluated -
            the expression to the right of the operator.
            </summary>
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression"/>.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression">
            <summary>
            Represents the value of an <see cref="T:System.Security.Principal.IIdentity"/> object
            whose <see cref="P:System.Security.Principal.IIdentity.IsAuthenticated"/> property is false.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression">
            <summary>
            Represents a word value such as a role
            name or identity name.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression"/> class.
            </summary>
            <param name="word">A string value that is 
            the name of an identity or role.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>
            by checking if it is in the role that matches 
            the Value property of the current object.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True if the specified principal is in the role, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression.Evaluate(System.Security.Principal.IIdentity)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IIdentity"/>
            by checking if its name matches 
            the Value property of the current object.
            </summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IIdentity"/>
            that the current expression will be evaluated against.</param>
            <returns>True if the specified identity's name matches the value of the current expression, otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression.Value">
            <summary>
            The string value of the word.
            </summary>
            <value>The string from the expression.</value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns><strong>True</strong> if the principal contains
            an anonymous identity, otherwise <strong>false</strong>.</returns>
            <exception cref="T:System.NotSupportedException">This expression
            can only be evaluated against an identity. It has no 
            meaning for a principal's roles because there
            is no common definition of an anonymous role.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression.Evaluate(System.Security.Principal.IIdentity)">
            <summary>
            Evaluates the specified 
            <see cref="T:System.Security.Principal.IIdentity"/>.
            </summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IIdentity"/>
            that the current expression will be evaluated against.</param>
            <returns><strong>True</strong> if the identity is
            an anonymous identity, otherwise <strong>false</strong>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnonymousExpression.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression">
            <summary>
            Represents an expression that evaluates to true
            for any specified principal.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the specified principal and returns
            true if the principal is not null.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns><strong>True</strong> if the principal
            is not null, otherwise <strong>false</strong>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression.Evaluate(System.Security.Principal.IIdentity)">
            <summary>
            Evaluates the specified 
            <see cref="T:System.Security.Principal.IIdentity"/>.
            </summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IIdentity"/>
            that the current expression will be evaluated against.</param>
            <returns><strong>True</strong> if the identity not null, 
            otherwise <strong>false</strong>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AnyExpression.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException">
            <summary>
            Exception throw by an 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider"/> 
            when the requested rule is not found.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.#ctor">
            <summary>
            Initializes an <c>AuthorizationRuleNotFoundException</c> 
            with a specified error message.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.#ctor(System.String)">
            <summary>
            Initializes an <c>AuthorizationRuleNotFoundException</c> with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an <c>AuthorizationRuleNotFoundException</c> with a specified error message
            and inner exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <c>AuthorizationRuleNotFoundException</c> class with a specified error message.
            </summary>
            <param name="ruleName">The name of the rule provider.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <c>AuthorizationRuleNotFoundException</c> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo object 
            with the rule name and 
            additional exception information.
            </summary>
            <param name="info">The object that holds 
            the serialized object data.</param>
            <param name="context">The contextual information 
            about the source or destination. 
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleNotFoundException.RuleName">
            <summary>
            Gets the requested rule name
            that was not found.
            </summary>
            <value>The name of the rule provider.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider">
            <summary>
            Represents an authorization provider that evaluates
            boolean expressions to determine whether 
            <see cref="T:System.Security.Principal.IPrincipal"/> objects
            are authorized.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider">
            <summary>
            Defines the basic functionality of an authorization provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Evaluates the specified authority against the specified context.
            </summary>
            <param name="principal">Must be an <see cref="T:System.Security.Principal.IPrincipal"/> object.</param>
            <param name="context">Name of the rule to evaluate.</param>
            <returns><strong>True</strong> if the expression evaluates to true,
            otherwise <strong>false</strong>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            Initializes the state of the current object from
            the specified configuration data.
            </summary>
            <param name="configurationView">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"></see> object</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider.Authorize(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Evaluates the specified authority against the specified context.
            </summary>
            <param name="principal">Must be an <see cref="T:System.Security.Principal.IPrincipal"/> object.</param>
            <param name="ruleName">Must be a string that is the name of the rule to evaluate.</param>
            <returns><c>true</c> if the expression evaluates to true,
            otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression">
            <summary>
            Represents an expression that contains the 
            name of an <see cref="T:System.Security.Principal.IIdentity"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression"/> class with
            the specified name.
            </summary>
            <param name="wordExpression">The name of an identity.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression"/> class with
            the specified identity name.
            </summary>
            <param name="identityName">The identity
            name that will be used to match the 
            specified identity during evaluation.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the specified principal against the
            current expression. 
            </summary>
            <param name="principal">The 
            <see cref="T:System.Security.Principal.IPrincipal"/>
            against which the current expression will be evaluated.</param>
            <returns><strong>True</strong> if the specified
            principal's identity matches this expressions identity,
            otherwise <strong>false</strong>.</returns>
            <remarks>The expression evaluates
            to true if the specified principal's identity has
            the same name as the current <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.Word"/>
            property. A case-insensitive string comparison
            is performed.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.IdentityExpression.Word">
            <summary>
            Gets or sets the name of the identity that the
            specified principal will be evaluated against.
            </summary>
            <value>An identity name.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer">
            <summary>
            Represents a lexical analyzer for boolean expressions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer.#ctor(System.String)">
            <summary>
            The expression to analyze.
            </summary>
            <param name="expression">A boolean expression.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer.MoveNext">
            <summary>
            Gets the type of the next token.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType"/> value.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer.Current">
            <summary>
            Gets the string value of the current token.
            </summary>
            <returns>The value of the current</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer.CurrentMatch">
            <summary>
            Gets the current match of the regular expression.
            </summary>
            <value>A <see cref="T:System.Text.RegularExpressions.Match"/></value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.LexicalAnalyzer.PreviousMatch">
            <summary>
            Gets the previous match of the regular expression.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator">
            <summary>
            Represents the logical negation operator 
            is a unary operator that negates its operand. 
            It returns true if and only if its operand is false.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator.#ctor">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator"/> class.
            </summary>
            <param name="expression">The operand that this
            operator will negate.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.NotOperator.Expression">
            <summary>
            Gets or sets the expression that will be negated by the
            current operator.
            </summary>
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression"/> object.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator">
            <summary>
            Represents an operator that performs a logical-OR of its
            contained left and right expressions, but only evaluates
            its second expression if the first expression evaluates to true.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression,Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator"/> class with the
            specified expressions.
            </summary>
            <param name="left">The first expression to evaluate.</param>
            <param name="right">The second expression to evaluate.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.OrOperator.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.Parser">
            <summary>
            Represents a parser for identity role rule expresssions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.Parser.Parse(System.String)">
            <summary>
            Parses the the specified expression into a
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression"/>.
            </summary>
            <param name="expression">An expression.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.BooleanExpression"/>
            object that is the root of the parse tree.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.Parser.MoveNext">
            <devdoc>Get the next token from the lexer.</devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.Parser.AssertTokenType(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType)">
            <devdoc>Asserts that the current token is 
            of the specified type.</devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression">
            <summary>
            Represents an expression that contains the 
            name of a role.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression"/>
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Authorization.WordExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression"/>
            class with the specified role name.
            </summary>
            <param name="wordExpression">The name of a role.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression"/> class.
            </summary>
            <param name="roleName">The name of the role
            to include in the expression.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.Evaluate(System.Security.Principal.IPrincipal)">
            <summary>
            Evaluates the current expression against the specified 
            <see cref="T:System.Security.Principal.IPrincipal"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Principal.IPrincipal"/>
            that the current expression will be evaluated against.</param>
            <returns>True if the princal is in this expression's 
            role, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.ToString">
            <summary>
            Returns a textual representation of the current expression
            </summary>
            <returns>An expression string.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.RoleExpression.Word">
            <summary>
            Gets or sets the name of the role that the
            specified principal will be evaluated against.
            </summary>
            <value>A role name.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException">
            <summary>
            The exception that is thrown when a syntax error
            is found in an identity role rule expression.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException"/> class 
            with a specified error message and 
            a reference to the inner exception 
            that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException"/> class with the
            specified message and index.
            </summary>
            <param name="message">The syntax error message.</param>
            <param name="index">The position in the expression where the syntax
            error was found.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException"/> class 
            with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds 
            the serialized object data about the 
            exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            that contains contextual information 
            about the source or destination. 
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            with information about the exception.
            </summary>
            <param name="info">The SerializationInfo 
            that holds the serialized object data 
            about the exception being thrown. 
            </param>
            <param name="context">
            The StreamingContext that contains contextual 
            information about the source or destination. 
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.SyntaxException.Index">
            <summary>
            The position in the expression where the syntax
            error was found.
            </summary>
            <value>The zero-based starting position in the original 
            string where syntax error was found.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType">
            <summary>
            Specifies the type of a token in an expression.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.InvalidCharacter">
            <summary>
            Invalid character
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.NoToken">
            <summary>
            No token found
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Or">
            <summary>
            Or token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.And">
            <summary>
            And token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Identity">
            <summary>
            Identity token 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Role">
            <summary>
            Role token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Not">
            <summary>
            Not token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Word">
            <summary>
            Word token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Any">
            <summary>
            Any token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.Anonymous">
            <summary>
            Anonymous token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.LeftParenthesis">
            <summary>
            Left Paren token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.RightParenthesis">
            <summary>
            Right paren token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.QuotedString">
            <summary>
            Quoted string token
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.TokenType.EndOfFile">
            <summary>
            EOF token
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData">
            <summary>
            Represents the common configuration data for
            all authentication providers.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData.#ctor(System.String)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> class.
            </summary>
            <param name="name">The name of the provider.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderDataCollection">
            <summary>
            Represents a strongly-typed collection of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderDataCollection.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData">
            <summary>
            Represents the common configuration data for
            all authorization providers.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData.#ctor(System.String)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> class.
            </summary>
            <param name="name">The name of the provider.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderDataCollection">
            <summary>
            Represents a strongly-typed collection of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderDataCollection.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData">
            <summary>
            Represents the configuration data for a
            rule that is governed by an 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> class with
            the specified name and expression.
            </summary>
            <param name="name">The name of the rule</param>
            <param name="expression">The expression to evaluate.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.Name">
            <summary>
            Gets or sets the name of the rule.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.Expression">
            <summary>
            Gets or sets the expression associated with
            this rule.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleDataCollection">
            <summary>
            Represents a strongly-typed collection of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleDataCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData">
            <summary>
            Represents the configuration data for an
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData"/> class.
            </summary>
            <param name="name">The name of the rule provider.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData.Rules">
            <summary>
            Gets or sets the list of rules associated with
            the provider.
            </summary>
            <value>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleDataCollection"/>.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationRuleProviderData.TypeName">
            <summary>
            Overriden so that the XmlSerializer will ignore this property. Gets a fixed value which is the type name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Authorization.AuthorizationRuleProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData">
            <summary>
            Represents extensible configuration data for a custom
            authentication provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData"/> class with
            the specified name and type name.
            </summary>
            <param name="name">The name of the provider.</param>
            <param name="typeName">The type of the provider.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData.Extensions">
            <summary>
            <para>Gets the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData.Extensions"/> defined as a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"/>s defined for the data protection provider. The default is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>
            <remarks>
            <para>The name of the attribute maps to the key in the collection, and the value is the value.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthenticationProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData">
            <summary>
            Represents extensible configuration data for a custom
            authorization provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData"/> class with
            the specified name and type name.
            </summary>
            <param name="name">The name of the provider.</param>
            <param name="typeName">The type name of a class that implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData.Extensions">
            <summary>
            <para>Gets the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData.Extensions"/> defined as a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <value>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomAuthorizationProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData">
            <summary>
            Represents extensible configuration data for a custom
            authorization provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData">
            <summary>
            Represents the common configuration data for
            all profile providers.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData.#ctor(System.String)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> class.
            </summary>
            <param name="name">The name of the provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData"/> class with
            the specified name and type name.
            </summary>
            <param name="name">The name of the provider.</param>
            <param name="typeName">The type name of a class that implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData.Extensions">
            <summary>
            <para>Gets the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData.Extensions"/> defined as a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <value>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomProfileProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData">
            <summary>
            Represents extensible configuration data for a custom
            roles provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData">
            <summary>
            Represents the common configuration data for
            all roles providers.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData.#ctor(System.String)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> class.
            </summary>
            <param name="name">The name of the provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData"/> class with
            the specified name and type name.
            </summary>
            <param name="name">The name of the provider.</param>
            <param name="typeName">The type name of a class that implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData.Extensions">
            <summary>
            <para>Gets the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData.Extensions"/> defined as a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"/>s defined for the data protection provider. The default is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>
            <remarks>
            <para>The name of the attribute maps to the key in the collection, and the value is the value.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomRolesProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData">
            <summary>
            Represents extensible configuration data for a custom
            security cache provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData">
            <summary>
            Configuration data for the Security Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData.#ctor(System.String)">
            <summary>
            Intializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> class.
            </summary>
            <param name="name">The name of the provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData"/> class with
            the specified name and type name.
            </summary>
            <param name="name">The name of the provider.</param>
            <param name="typeName">The type name of a class that implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData.Extensions">
            <summary>
            <para>Gets the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData.Extensions"/> defined as a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"/>s defined for the data protection provider. The default is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>
            <remarks>
            <para>The name of the attribute maps to the key in the collection, and the value is the value.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.CustomSecurityCacheProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderDataCollection">
            <summary>
            Represents a strongly-typed collection of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderDataCollection.Item(System.Int32)">
            <summary>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderDataCollection">
            <summary>
            Represents a strongly-typed collection of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderDataCollection.Item(System.Int32)">
            <summary>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderDataCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> settings.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderDataCollection.Item(System.Int32)">
            <summary>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> by its index.
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> to get or set.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings">
            <summary>
            Represents the configuration data for the 
            security providers.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.SectionName">
            <summary>
            The name of the configuration section for the security providers.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.ConfigurationNamespace">
            <summary>
            <para>Gets the Xml namespace for this root node.</para>
            </summary>
            <value>
            <para>The Xml namespace for this root node.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.DefaultAuthorizationProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthorizationProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.DefaultAuthenticationProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.DefaultRolesProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.DefaultProfileProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.DefaultSecurityCacheProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.RolesProviders">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderDataCollection"/>.</para>
            </summary>
            <value>
            <para>The roles providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>rolesProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.AuthorizationProviders">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderDataCollection"/>.</para>
            </summary>
            <value>
            <para>The authorization providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>authorizationProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.AuthenticationProviders">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderDataCollection"/>.</para>
            </summary>
            <value>
            <para>The authentication providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>authenticationProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.ProfileProviders">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderDataCollection"/>.</para>
            </summary>
            <value>
            <para>The profile providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>profileProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings.SecurityCacheProviders">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderDataCollection"/>.</para>
            </summary>
            <value>
            <para>The security cache providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>securityCacheProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.GuidToken">
            <summary>
            Implementation of <c>IToken</c> for a <c>Guid</c>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.IToken">
            <summary>
            Allows end users to implement their own tokens.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.IToken.Value">
            <summary>
            Token contents as a string.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.GuidToken.#ctor">
            <summary>
            Creates a GuidToken with a new <c>Guid</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.GuidToken.#ctor(System.Guid)">
            <summary>
            Creates a GuidToken with a defined <c>Guid</c>.
            </summary>
            <param name="guid">User-provided <c>Guid</c></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.GuidToken.Value">
            <summary>
            Returns the ToString representation of the <c>Guid</c>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider">
            <summary>
            Defines the basic functionality of an authentication provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.IAuthenticationProvider.Authenticate(System.Object,System.Security.Principal.IIdentity@)">
            <summary>
            Verifies the specified credentials and constructs an
            <see cref="T:System.Security.Principal.IIdentity"/> object.
            </summary>
            <param name="credentials">A credential object such as a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential"/>.</param>
            <param name="identity">An <see cref="T:System.Security.Principal.IIdentity"/> object.</param>
            <returns><strong>True</strong> if authentication was
            successful, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.ProjectInstaller">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>  
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.ProjectInstaller.#ctor">
            <summary/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationCheckEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.internalEvent">
            <summary/>
            <exclude/>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.eventMessage">
            <summary/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.#ctor">
            <summary/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.#ctor(System.String[],Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.EventLogIdentifier[])">
            <summary/>
            <param name="counterNames"/>
            <param name="eventLogIDs"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.#ctor(System.String[])">
            <summary/>
            <param name="counterNames"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.FireAuxEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.Message">
            <summary/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.CounterID">
            <devdoc>
            Index to the Counters array.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityServiceEvent.Log">
            <devdoc>
            Event Log Event IDs
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationCheckEvent.Fire(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationCheckEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationFailedEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationFailedEvent.Fire(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthenticationFailedEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationCheckEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationCheckEvent.Fire(System.String,System.String)">
            <summary/>
            <param name="message"/>
            <param name="context"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationCheckEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude />
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationFailedEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationFailedEvent.Fire(System.String,System.String)">
            <summary/>
            <param name="message"/>
            <param name="context"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityAuthorizationFailedEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityCacheReadEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityCacheReadEvent.Fire(System.Boolean)">
            <summary/>
            <param name="hitOrMiss"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileLoadEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileLoadEvent.Fire(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileLoadEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileSaveEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileSaveEvent.Fire(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityProfileSaveEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityRoleLoadEvent">
            <summary>
            <para>
            This type supports the Instrumentation infrastructure and is not intended to be used directly from your code.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityRoleLoadEvent.Fire(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Instrumentation.SecurityRoleLoadEvent.FireEvent(System.String)">
            <summary/>
            <param name="message"/>
            <exclude/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider">
            <summary>
            Defines the basic functionality of a profile provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider.GetProfile(System.Security.Principal.IIdentity)">
            <summary>
            Gets the profile for the specified identity.
            </summary>
            <param name="identity">An identity.</param>
            <returns>A profile object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider.SetProfile(System.Security.Principal.IIdentity,System.Object)">
            <summary>
            Sets the profile for the specified identity
            </summary>
            <param name="identity">An identity object.</param>
            <param name="profile">A profile object.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider">
            <summary>
            Defines the basic functionality of a role provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider.GetRoles(System.Security.Principal.IIdentity)">
            <summary>
            Creates a principal with the role information
            for the specified identity.
            </summary>
            <param name="identity">An <see cref="T:System.Security.Principal.IIdentity"/></param>
            <returns>An <see cref="T:System.Security.Principal.IPrincipal"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider">
            <summary>
            Allows end users to implement their own Security Caches.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SaveIdentity(System.Security.Principal.IIdentity)">
            <summary>
            Caches an authenticated IIdentity object. There is no implicit
            expiration defined for this item.
            </summary>
            <param name="identity">
            IIdentity object representing an authenticated user.
            </param>
            <returns>Token to identify the cached Identity</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SaveIdentity(System.Security.Principal.IIdentity,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches an authenticated IIdentity object using an existing token
            enabling the grouping of related items. There is no implicit
            expiration defined for this item.
            </summary>
            <param name="identity">
            IIdentity object representing an authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entities.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SavePrincipal(System.Security.Principal.IPrincipal)">
            <summary>
            Caches an authenticated IPrincipal object. There is no implicit
            expiration defined for this item.
            </summary>
            <param name="principal">
            IPrincipal object representing an authenticated user and roles.
            </param>
            <returns>Token to identify the cached IPrincipal object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SavePrincipal(System.Security.Principal.IPrincipal,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches an authenticated IPrincipal object using an existing token
            enabling the grouping of related items. There is no implicit
            expiration defined for this item.
            </summary>
            <param name="principal">
            IPrincipal object representing an authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SaveProfile(System.Object)">
            <summary>
            Caches a profile for an authenticated user. There is no implicit
            expiration defined for this item.
            </summary>
            <param name="profile">
            Object representing the profile of authenticated user.
            </param>
            <returns>Token to identify the cached Profile object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.SaveProfile(System.Object,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches a profile for an authenticated user using an existing token
            (enabling the grouping of related items). There is no implicit
            expiration defined for this item.
            </summary>
            <param name="profile">
            Object representing the profile of authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.ExpireIdentity(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing IIdentity object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.ExpirePrincipal(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing IPrincipal object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.ExpireProfile(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing Profile object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.GetIdentity(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing IIdentity object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached IIdentity object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.GetPrincipal(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing IPrincipal object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached IPrincipal object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider.GetProfile(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing Profile object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached Profile object</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential">
            <summary>
            Represents an authentication credential consisting of a
            name and password associated with a user or system account.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential"/>
            class with the specified name and password.
            </summary>
            <param name="name">A name associated with a user or system account.</param>
            <param name="password">A password associated with a user or system</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential"/>
            class with the specified name and password.
            </summary>
            <param name="name">A name associated with a user or system account.</param>
            <param name="password">A password associated with a user or system</param>
            <remarks>
            It is recommended that you use <see cref="M:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.#ctor(System.String,System.Byte[])"/>
            so that you can overwrite the password bytes when you are done using them.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.Name">
            <summary>
            Gets the name of this credential.
            </summary>
            <value>A string.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.PasswordBytes">
            <summary>
            Gets the password of this credential as a byte array.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.NamePasswordCredential.Password">
            <summary>
            Gets the password of this credential as a string.
            </summary>
            <remarks>
            It is recommended that you use PasswordBytes so that you can overwrite the password bytes
            when you are done using them.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.ProfileFactory">
            <summary>
            Static factory class used to get instances of a specified IProfileProvider
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileFactory.GetProfileProvider">
            <summary>
            Returns the default IProfileProvider instance. 
            Guaranteed to return an intialized IProfileProvider if no exception thrown
            </summary>
            <returns>Default Profile provider instance.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to create default IProfileProvider</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileFactory.GetProfileProvider(System.String)">
            <summary>
            Returns the named IProfileProvider instance. Guaranteed to return an initialized IProfileProvider if no exception thrown.
            </summary>
            <param name="profileProviderName">Name defined in configuration for the Profile provider to instantiate</param>
            <returns>Named Profile provider instance</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory">
            <summary>
            Provides methods for the creation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory"/>
            class with a specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.
            </summary>
            <param name="context">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.GetProfileProvider">
            <summary>
            Gets the default profile provider as specified via configuration.
            </summary>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.GetProfileProvider(System.String)">
            <summary>
            Gets the profile provider with the specified name.
            </summary>
            <param name="name">The configured name of an profile provider</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.CreateConfigurationView">
            <summary>
            <para>Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.GetConfigurationType(System.String)">
            <summary>
            <para>Gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="profileProviderName"/>.</para>
            </summary>
            <param name="profileProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IProfileProvider"/> to create.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.ProfileProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.RolesFactory">
            <summary>
            Static factory class used to get instances of a specified IRolesProvider
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesFactory.GetRolesProvider">
            <summary>
            Returns the default IRolesProvider instance. 
            Guaranteed to return an intialized IRolesProvider if no exception thrown
            </summary>
            <returns>Default Roles provider instance.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to create default IRolesProvider</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesFactory.GetRolesProvider(System.String)">
            <summary>
            Returns the named IRolesProvider instance. Guaranteed to return an initialized IRolesProvider if no exception thrown.
            </summary>
            <param name="rolesProviderName">Name defined in configuration for the Roles provider to instantiate</param>
            <returns>Named Roles provider instance</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesFactory.GetRolesProvider(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            Returns the named IRolesProvider instance. Guaranteed to return an initialized IRolesProvider if no exception thrown.
            </summary>
            <param name="rolesProviderName">Name defined in configuration for the Roles provider to instantiate</param>
            <param name="context">The configuration context to use.</param>
            <returns>Named Roles provider instance</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory">
            <summary>
            Provides methods for the creation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory"/> class with a specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.
            </summary>
            <param name="context">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.GetRolesProvider">
            <summary>
            Gets the default roles provider as specified via configuration.
            </summary>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.GetRolesProvider(System.String)">
            <summary>
            Gets the roles provider with the specified name.
            </summary>
            <param name="roleProviderName">The configured name of an roles provider</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.CreateConfigurationView">
            <summary>
            <para>Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.GetConfigurationType(System.String)">
            <summary>
            <para>Gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="roleProviderName"/>.</para>
            </summary>
            <param name="roleProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.IRolesProvider"/> to create.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.RolesProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheFactory">
            <summary>
            Static factory class used to get instances of a specified ISecurityCacheProvider
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheFactory.GetSecurityCacheProvider">
            <summary>
            Returns the default ISecurityCacheProvider instance. 
            Guaranteed to return an intialized ISecurityCacheProvider if no exception thrown
            </summary>
            <returns>Default SecurityCache provider instance.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to create default ISecurityCacheProvider</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheFactory.GetSecurityCacheProvider(System.String)">
            <summary>
            Returns the named ISecurityCacheProvider instance. Guaranteed to return an initialized ISecurityCacheProvider if no exception thrown.
            </summary>
            <param name="securityCacheProviderName">Name defined in configuration for the SecurityCache provider to instantiate</param>
            <returns>Named SecurityCache provider instance</returns>
            <exception cref="T:System.ArgumentNullException">providerName is null</exception>
            <exception cref="T:System.ArgumentException">providerName is empty</exception>
            <exception cref="T:System.Configuration.ConfigurationException">Could not find instance specified in providerName</exception>
            <exception cref="T:System.InvalidOperationException">Error processing configuration information defined in application configuration file.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory">
            <summary>
            Provides methods for the creation of
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            Creates an instance of the factory.
            </summary>
            <param name="context">The current configuration context.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.GetSecurityCacheProvider">
            <summary>
            Gets the default security cache provider as specified via configuration.
            </summary>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.GetSecurityCacheProvider(System.String)">
            <summary>
            Gets the security cache provider with the specified name.
            </summary>
            <param name="name">The configured name of an security cache provider</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.CreateConfigurationView">
            <summary>
            <para>Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.GetConfigurationType(System.String)">
            <summary>
            <para>Gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="securityCacheProviderName"/>.</para>
            </summary>
            <param name="securityCacheProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> to create.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView">
            <summary>
            <para>Represents a view for navigating the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings"/> configuration data.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </summary>
            <param name="configurationContext">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetSecuritySettings">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings"/> configuration data.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings"/> configuration data.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetDefaultSecurityCacheProviderName">
            <summary>
            <para>Gets the name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/>.</para>
            </summary>
            <returns>
            <para>The name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetSecurityCacheProviderData(System.String)">
            <summary>
            <para>Gets the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> from configuration.</para>
            </summary>
            <param name="securityCacheProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> to get the data.</para>
            </param>
            <returns>
            <para>The named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> from configuration.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetDefaultRoleProviderName">
            <summary>
            <para>Gets the name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/>.</para>
            </summary>
            <returns>
            <para>The name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetRolesProviderData(System.String)">
            <summary>
            <para>Gets the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> from configuration.</para>
            </summary>
            <param name="roleProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> to get the data.</para>
            </param>
            <returns>
            <para>The named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.RolesProviderData"/> from configuration.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetDefaultProfileProviderName">
            <summary>
            <para>Gets the name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/>.</para>
            </summary>
            <returns>
            <para>The name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetProfileProviderData(System.String)">
            <summary>
            <para>Gets the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> from configuration.</para>
            </summary>
            <param name="profileProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> to get the data.</para>
            </param>
            <returns>
            <para>The named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.ProfileProviderData"/> from configuration.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetDefaultAuthorizationProviderName">
            <summary>
            <para>Gets the name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/>.</para>
            </summary>
            <returns>
            <para>The name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetAuthorizationProviderData(System.String)">
            <summary>
            <para>Gets the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> from configuration.</para>
            </summary>
            <param name="authorizationProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> to get the data.</para>
            </param>
            <returns>
            <para>The named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthorizationProviderData"/> from configuration.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetDefaultAuthenticationProviderName">
            <summary>
            <para>Gets the name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/>.</para>
            </summary>
            <returns>
            <para>The name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityConfigurationView.GetAuthenticationProviderData(System.String)">
            <summary>
            <para>Gets the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> from configuration.</para>
            </summary>
            <param name="authenticationProviderName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> to get the data.</para>
            </param>
            <returns>
            <para>The named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.AuthenticationProviderData"/> from configuration.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityRolesProvider">
            <summary>
            Base class for RolesProviders in the security infrastructure. This class encapsulates the
            basic policy of how roles are retrieved from the underlying store, construction of a principal
            based on the roles and identity of the user, and calls instrumentation. Details of how this all
            happens are left to subclasses.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityRolesProvider.GetRoles(System.Security.Principal.IIdentity)">
            <summary>
            Verifies the <see cref="T:System.Security.Principal.IIdentity"/> object and wraps it inside 
            a new <see cref="T:System.Security.Principal.GenericPrincipal"/> object along with any security
            roles the user is a member of.
            </summary>
            <param name="userIdentity">An <see cref="T:System.Security.Principal.IIdentity"/> object 
            representing an authenticated user.
            </param>
            <returns>
            If successfull, returns the populated <see cref="T:System.Security.Principal.IPrincipal"/> object.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityRolesProvider.CollectAllUserRoles(System.Security.Principal.IIdentity)">
            <summary>
            Subclasses must override this method to retrieve the associated list of
            user roes for the given identity. 
            </summary>
            <param name="userIdentity">Identity of user used for retrieval</param>
            <returns>String array of roles for the given user identity</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.SecurityRolesProvider.ValidateParameters(System.Security.Principal.IIdentity)">
            <summary>
            Validates the identity.
            </summary>
            <param name="userIdentity">The identity to validate.</param>
        </member>
    </members>
</doc>
