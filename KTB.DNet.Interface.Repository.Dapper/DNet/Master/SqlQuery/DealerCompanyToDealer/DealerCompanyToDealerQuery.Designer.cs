//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KTB.DNet.Interface.Repository.Dapper.DNet.Master.SqlQuery.DealerCompanyToDealer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DealerCompanyToDealerQuery {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DealerCompanyToDealerQuery() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KTB.DNet.Interface.Repository.Dapper.DNet.Master.SqlQuery.DealerCompanyToDealer.D" +
                            "ealerCompanyToDealerQuery", typeof(DealerCompanyToDealerQuery).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [DealerCompanyToDealer]
        ///	SET RowStatus = -1
        ///    WHERE ID = @ID
        ///
        ///
        ///.
        /// </summary>
        internal static string DeleteDealerCompanyToDealer {
            get {
                return ResourceManager.GetString("DeleteDealerCompanyToDealer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT * FROM [DealerCompanyToDealer]
        ///WHERE RowStatus = 0
        ///
        ///
        ///.
        /// </summary>
        internal static string GetAllDealerCompanyToDealer {
            get {
                return ResourceManager.GetString("GetAllDealerCompanyToDealer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO DealerCompany
        ///(
        ///	DealerCompanyCode,
        ///	DealerCompanyName,
        ///	DealerGroupID,
        ///	RowStatus,
        ///	CreatedBy,
        ///	CreatedTime,
        ///	LastUpdateBy,
        ///	LastUpdateTime
        ///)
        ///OUTPUT INSERTED.ID
        ///VALUES
        ///(
        ///	@DealerCompanyCode,
        ///	@DealerCompanyName,
        ///	@DealerGroupID,
        ///	@RowStatus,
        ///	@CreatedBy,
        ///	@CreatedTime,
        ///	@LastUpdateBy,
        ///	@LastUpdateTime
        ///);  
        ///
        ///
        ///.
        /// </summary>
        internal static string InsertDealerCompanyToDealer {
            get {
                return ResourceManager.GetString("InsertDealerCompanyToDealer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ////**PagingIndexQuery**/
        ///	DealerCompanyToDealer.ID,
        ///	DealerCompanyToDealer.DealerCompanyID,
        ///	DealerCompany.DealerCompanyName,
        ///	DealerCompanyToDealer.DealerID,
        ///	Dealer.DealerCode AS DealerCode,
        ///	DealerCompanyToDealer.RowStatus,
        ///	DealerCompanyToDealer.CreatedBy,
        ///	DealerCompanyToDealer.CreatedTime,
        ///	DealerCompanyToDealer.LastUpdateBy,
        ///	DealerCompanyToDealer.LastUpdateTime
        ///	/**EndPagingIndexQuery**/
        ///FROM [DealerCompanyToDealer] AS DealerCompanyToDealer
        ///JOIN DealerCompany AS DealerCompany ON  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchDealerCompanyToDealer {
            get {
                return ResourceManager.GetString("SearchDealerCompanyToDealer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ////**PagingIndexQuery**/
        ///	COUNT (*)
        ///	/**EndPagingIndexQuery**/
        ///FROM [DealerCompanyToDealer] AS DealerCompanyToDealer
        ///JOIN DealerCompany AS DealerCompany ON DealerCompany.ID = DealerCompanyToDealer.DealerCompanyID
        ///JOIN Dealer as Dealer ON Dealer.ID = DealerCompanyToDealer.DealerID
        ///WHERE
        ///	(@ID = 0 OR DealerCompany.ID = @ID) AND
        ///	(@DealerCompanyID = &apos;&apos; OR DealerCompanyToDealer.DealerCompanyID = @DealerCompanyID) AND
        ///	(@DealerID = &apos;&apos; OR DealerCompanyToDealer.DealerID LIKE @DealerID) AND
        ///	Dealer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchDealerCompanyToDealerTotal {
            get {
                return ResourceManager.GetString("SearchDealerCompanyToDealerTotal", resourceCulture);
            }
        }
    }
}
