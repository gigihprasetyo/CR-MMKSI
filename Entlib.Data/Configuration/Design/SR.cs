// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Design
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string ExceptionConnectionStringNodeNotFound (string connectionString, string instanceName)
		{
			return Keys.GetString( Keys.ExceptionConnectionStringNodeNotFound, connectionString, instanceName );
		}
		public static string ExceptionInstanceNodeNotFound (string instanceName)
		{
			return Keys.GetString( Keys.ExceptionInstanceNodeNotFound, instanceName );
		}
		public static string ExceptionDatabaseTypeNodeNotFound (string typeName, string instanceName)
		{
			return Keys.GetString( Keys.ExceptionDatabaseTypeNodeNotFound, typeName, instanceName );
		}
		public static string DataConfigurationMenuText
		{
			get { return Keys.GetString( Keys.DataConfigurationMenuText ); }
		}
		public static string ParameterMenuText
		{
			get { return Keys.GetString( Keys.ParameterMenuText ); }
		}
		public static string SensitiveParameterMenuText
		{
			get { return Keys.GetString( Keys.SensitiveParameterMenuText ); }
		}
		public static string DatabaseTypeNodeMenuText
		{
			get { return Keys.GetString( Keys.DatabaseTypeNodeMenuText ); }
		}
		public static string InstanceNodeMenuText
		{
			get { return Keys.GetString( Keys.InstanceNodeMenuText ); }
		}
		public static string InstanceColectionNodeMenuText
		{
			get { return Keys.GetString( Keys.InstanceColectionNodeMenuText ); }
		}
		public static string DatabaseTypeColectionNodeMenuText
		{
			get { return Keys.GetString( Keys.DatabaseTypeColectionNodeMenuText ); }
		}
		public static string ConnectionStringColectionNodeMenuText
		{
			get { return Keys.GetString( Keys.ConnectionStringColectionNodeMenuText ); }
		}
		public static string ConnectionStringMenuText
		{
			get { return Keys.GetString( Keys.ConnectionStringMenuText ); }
		}
		public static string DataConfigurationStatusText
		{
			get { return Keys.GetString( Keys.DataConfigurationStatusText ); }
		}
		public static string ParameterStatusText
		{
			get { return Keys.GetString( Keys.ParameterStatusText ); }
		}
		public static string SensitiveParameterStatusText
		{
			get { return Keys.GetString( Keys.SensitiveParameterStatusText ); }
		}
		public static string GenericCreateStatusText (string name)
		{
			return Keys.GetString( Keys.GenericCreateStatusText, name );
		}
		public static string DatabaseTypeNodeStatusText
		{
			get { return Keys.GetString( Keys.DatabaseTypeNodeStatusText ); }
		}
		public static string InstanceNodeStatusText
		{
			get { return Keys.GetString( Keys.InstanceNodeStatusText ); }
		}
		public static string InstanceColectionNodeStatusText
		{
			get { return Keys.GetString( Keys.InstanceColectionNodeStatusText ); }
		}
		public static string DatabaseTypeColectionNodeStatusText
		{
			get { return Keys.GetString( Keys.DatabaseTypeColectionNodeStatusText ); }
		}
		public static string ConnectionStringColectionNodeStatusText
		{
			get { return Keys.GetString( Keys.ConnectionStringColectionNodeStatusText ); }
		}
		public static string OracleConnectionStringNodeFriendlyName
		{
			get { return Keys.GetString( Keys.OracleConnectionStringNodeFriendlyName ); }
		}
		public static string ConnectionStringNodeFriendlyName
		{
			get { return Keys.GetString( Keys.ConnectionStringNodeFriendlyName ); }
		}
		public static string DefaultParameterNodeName
		{
			get { return Keys.GetString( Keys.DefaultParameterNodeName ); }
		}
		public static string ParameterValueDescription
		{
			get { return Keys.GetString( Keys.ParameterValueDescription ); }
		}
		public static string DefaultOraclePackageNodeName
		{
			get { return Keys.GetString( Keys.DefaultOraclePackageNodeName ); }
		}
		public static string DefaultDatabaseSettingsName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseSettingsName ); }
		}
		public static string DefaultConnectionStringCollectionNodeName
		{
			get { return Keys.GetString( Keys.DefaultConnectionStringCollectionNodeName ); }
		}
		public static string DefaultConnectionStringNodeName
		{
			get { return Keys.GetString( Keys.DefaultConnectionStringNodeName ); }
		}
		public static string DefaultOracleConnectionStringName
		{
			get { return Keys.GetString( Keys.DefaultOracleConnectionStringName ); }
		}
		public static string DefaultDatabaseTypeCollectionNodeName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseTypeCollectionNodeName ); }
		}
		public static string DefaultDatabaseTypeNodeName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseTypeNodeName ); }
		}
		public static string DefaultInstaceCollectionNodeName
		{
			get { return Keys.GetString( Keys.DefaultInstaceCollectionNodeName ); }
		}
		public static string DefaultInstanceNodeName
		{
			get { return Keys.GetString( Keys.DefaultInstanceNodeName ); }
		}
		public static string DefaultDatabaseName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseName ); }
		}
		public static string DefaultConnectionStringName
		{
			get { return Keys.GetString( Keys.DefaultConnectionStringName ); }
		}
		public static string DefaultInstanceTypeDescription
		{
			get { return Keys.GetString( Keys.DefaultInstanceTypeDescription ); }
		}
		public static string InstanceDatabaseTypeDescription
		{
			get { return Keys.GetString( Keys.InstanceDatabaseTypeDescription ); }
		}
		public static string DatabaseTypeFullyQualifedNameDescription
		{
			get { return Keys.GetString( Keys.DatabaseTypeFullyQualifedNameDescription ); }
		}
		public static string CategoryGeneral
		{
			get { return Keys.GetString( Keys.CategoryGeneral ); }
		}
		public static string DefaultDatabaseTypeName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseTypeName ); }
		}
		public static string DefaultServerParameterName
		{
			get { return Keys.GetString( Keys.DefaultServerParameterName ); }
		}
		public static string DefaultDatabaseParameterName
		{
			get { return Keys.GetString( Keys.DefaultDatabaseParameterName ); }
		}
		public static string DefaultSecurityParameterName
		{
			get { return Keys.GetString( Keys.DefaultSecurityParameterName ); }
		}
		public static string DefaultNewConnectionStringName
		{
			get { return Keys.GetString( Keys.DefaultNewConnectionStringName ); }
		}
		public static string MoveUpMenuItemText
		{
			get { return Keys.GetString( Keys.MoveUpMenuItemText ); }
		}
		public static string MoveDownMenuItemText
		{
			get { return Keys.GetString( Keys.MoveDownMenuItemText ); }
		}
		public static string MoveUpStatusText
		{
			get { return Keys.GetString( Keys.MoveUpStatusText ); }
		}
		public static string MoveDownStatusText
		{
			get { return Keys.GetString( Keys.MoveDownStatusText ); }
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Design.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Design.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, CultureInfo.CurrentUICulture );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, CultureInfo.CurrentUICulture );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string ExceptionConnectionStringNodeNotFound = "ExceptionConnectionStringNodeNotFound";
			public const string ExceptionInstanceNodeNotFound = "ExceptionInstanceNodeNotFound";
			public const string ExceptionDatabaseTypeNodeNotFound = "ExceptionDatabaseTypeNodeNotFound";
			public const string DataConfigurationMenuText = "DataConfigurationMenuText";
			public const string ParameterMenuText = "ParameterMenuText";
			public const string SensitiveParameterMenuText = "SensitiveParameterMenuText";
			public const string DatabaseTypeNodeMenuText = "DatabaseTypeNodeMenuText";
			public const string InstanceNodeMenuText = "InstanceNodeMenuText";
			public const string InstanceColectionNodeMenuText = "InstanceColectionNodeMenuText";
			public const string DatabaseTypeColectionNodeMenuText = "DatabaseTypeColectionNodeMenuText";
			public const string ConnectionStringColectionNodeMenuText = "ConnectionStringColectionNodeMenuText";
			public const string ConnectionStringMenuText = "ConnectionStringMenuText";
			public const string DataConfigurationStatusText = "DataConfigurationStatusText";
			public const string ParameterStatusText = "ParameterStatusText";
			public const string SensitiveParameterStatusText = "SensitiveParameterStatusText";
			public const string GenericCreateStatusText = "GenericCreateStatusText";
			public const string DatabaseTypeNodeStatusText = "DatabaseTypeNodeStatusText";
			public const string InstanceNodeStatusText = "InstanceNodeStatusText";
			public const string InstanceColectionNodeStatusText = "InstanceColectionNodeStatusText";
			public const string DatabaseTypeColectionNodeStatusText = "DatabaseTypeColectionNodeStatusText";
			public const string ConnectionStringColectionNodeStatusText = "ConnectionStringColectionNodeStatusText";
			public const string OracleConnectionStringNodeFriendlyName = "OracleConnectionStringNodeFriendlyName";
			public const string ConnectionStringNodeFriendlyName = "ConnectionStringNodeFriendlyName";
			public const string DefaultParameterNodeName = "DefaultParameterNodeName";
			public const string ParameterValueDescription = "ParameterValueDescription";
			public const string DefaultOraclePackageNodeName = "DefaultOraclePackageNodeName";
			public const string DefaultDatabaseSettingsName = "DefaultDatabaseSettingsName";
			public const string DefaultConnectionStringCollectionNodeName = "DefaultConnectionStringCollectionNodeName";
			public const string DefaultConnectionStringNodeName = "DefaultConnectionStringNodeName";
			public const string DefaultOracleConnectionStringName = "DefaultOracleConnectionStringName";
			public const string DefaultDatabaseTypeCollectionNodeName = "DefaultDatabaseTypeCollectionNodeName";
			public const string DefaultDatabaseTypeNodeName = "DefaultDatabaseTypeNodeName";
			public const string DefaultInstaceCollectionNodeName = "DefaultInstaceCollectionNodeName";
			public const string DefaultInstanceNodeName = "DefaultInstanceNodeName";
			public const string DefaultDatabaseName = "DefaultDatabaseName";
			public const string DefaultConnectionStringName = "DefaultConnectionStringName";
			public const string DefaultInstanceTypeDescription = "DefaultInstanceTypeDescription";
			public const string InstanceDatabaseTypeDescription = "InstanceDatabaseTypeDescription";
			public const string DatabaseTypeFullyQualifedNameDescription = "DatabaseTypeFullyQualifedNameDescription";
			public const string CategoryGeneral = "CategoryGeneral";
			public const string DefaultDatabaseTypeName = "DefaultDatabaseTypeName";
			public const string DefaultServerParameterName = "DefaultServerParameterName";
			public const string DefaultDatabaseParameterName = "DefaultDatabaseParameterName";
			public const string DefaultSecurityParameterName = "DefaultSecurityParameterName";
			public const string DefaultNewConnectionStringName = "DefaultNewConnectionStringName";
			public const string MoveUpMenuItemText = "MoveUpMenuItemText";
			public const string MoveDownMenuItemText = "MoveDownMenuItemText";
			public const string MoveUpStatusText = "MoveUpStatusText";
			public const string MoveDownStatusText = "MoveDownStatusText";
		}


	}
}
