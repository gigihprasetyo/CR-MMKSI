// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Data
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string UserName
		{
			get { return Keys.GetString( Keys.UserName ); }
		}
		public static string Password
		{
			get { return Keys.GetString( Keys.Password ); }
		}
		public static string FactoryName
		{
			get { return Keys.GetString( Keys.FactoryName ); }
		}
		public static string ExceptionMsg
		{
			get { return Keys.GetString( Keys.ExceptionMsg ); }
		}
		public static string EventSource
		{
			get { return Keys.GetString( Keys.EventSource ); }
		}
		public static string CounterCategory
		{
			get { return Keys.GetString( Keys.CounterCategory ); }
		}
		public static string CounterCategoryHelp
		{
			get { return Keys.GetString( Keys.CounterCategoryHelp ); }
		}
		public static string LogName
		{
			get { return Keys.GetString( Keys.LogName ); }
		}
		public static string NumConnPerSec
		{
			get { return Keys.GetString( Keys.NumConnPerSec ); }
		}
		public static string NumConnPerSecMsg
		{
			get { return Keys.GetString( Keys.NumConnPerSecMsg ); }
		}
		public static string NumConnFailPerSec
		{
			get { return Keys.GetString( Keys.NumConnFailPerSec ); }
		}
		public static string NumConnFailPerSecMsg
		{
			get { return Keys.GetString( Keys.NumConnFailPerSecMsg ); }
		}
		public static string NumCmdsPerSec
		{
			get { return Keys.GetString( Keys.NumCmdsPerSec ); }
		}
		public static string NumCmdsPerSecMsg
		{
			get { return Keys.GetString( Keys.NumCmdsPerSecMsg ); }
		}
		public static string NumCmdsFailPerSec
		{
			get { return Keys.GetString( Keys.NumCmdsFailPerSec ); }
		}
		public static string NumCmdsFailPerSecMsg
		{
			get { return Keys.GetString( Keys.NumCmdsFailPerSecMsg ); }
		}
		public static string NumTransOpenPerSec
		{
			get { return Keys.GetString( Keys.NumTransOpenPerSec ); }
		}
		public static string NumTransOpenPerSecMsg
		{
			get { return Keys.GetString( Keys.NumTransOpenPerSecMsg ); }
		}
		public static string NumTransFailPerSec
		{
			get { return Keys.GetString( Keys.NumTransFailPerSec ); }
		}
		public static string NumTransFailPerSecMsg
		{
			get { return Keys.GetString( Keys.NumTransFailPerSecMsg ); }
		}
		public static string NumTransCommitPerSec
		{
			get { return Keys.GetString( Keys.NumTransCommitPerSec ); }
		}
		public static string NumTransCommitPerSecMsg
		{
			get { return Keys.GetString( Keys.NumTransCommitPerSecMsg ); }
		}
		public static string NumTransAbortPerSec
		{
			get { return Keys.GetString( Keys.NumTransAbortPerSec ); }
		}
		public static string NumTransAbortPerSecMsg
		{
			get { return Keys.GetString( Keys.NumTransAbortPerSecMsg ); }
		}
		public static string AvgCmdTime
		{
			get { return Keys.GetString( Keys.AvgCmdTime ); }
		}
		public static string AvgCmdTimeMsg
		{
			get { return Keys.GetString( Keys.AvgCmdTimeMsg ); }
		}
		public static string TotalCmd
		{
			get { return Keys.GetString( Keys.TotalCmd ); }
		}
		public static string TotalCmdMsg
		{
			get { return Keys.GetString( Keys.TotalCmdMsg ); }
		}
		public static string MessageConnection (string connectionString)
		{
			return Keys.GetString( Keys.MessageConnection, connectionString );
		}
		public static string MessageDataConnectionOpened (string connectionString)
		{
			return Keys.GetString( Keys.MessageDataConnectionOpened, connectionString );
		}
		public static string ExceptionConnectionStringNotSet
		{
			get { return Keys.GetString( Keys.ExceptionConnectionStringNotSet ); }
		}
		public static string ExceptionParameterStringIsEmpty
		{
			get { return Keys.GetString( Keys.ExceptionParameterStringIsEmpty ); }
		}
		public static string ExceptionCommandTypeNotValid
		{
			get { return Keys.GetString( Keys.ExceptionCommandTypeNotValid ); }
		}
		public static string ExceptionTableNameArrayEmpty
		{
			get { return Keys.GetString( Keys.ExceptionTableNameArrayEmpty ); }
		}
		public static string ExceptionTableNameEmpty
		{
			get { return Keys.GetString( Keys.ExceptionTableNameEmpty ); }
		}
		public static string ExceptionExpectedType (string typeName)
		{
			return Keys.GetString( Keys.ExceptionExpectedType, typeName );
		}
		public static string ExceptionDatabaseSettingsMissing
		{
			get { return Keys.GetString( Keys.ExceptionDatabaseSettingsMissing ); }
		}
		public static string ExceptionMessageCreateServiceFailure (string databaseServiceKey)
		{
			return Keys.GetString( Keys.ExceptionMessageCreateServiceFailure, databaseServiceKey );
		}
		public static string ExceptionMessageDatabaseCommandFailed (string connectionString)
		{
			return Keys.GetString( Keys.ExceptionMessageDatabaseCommandFailed, connectionString );
		}
		public static string ExceptionMessageDatabaseConnectionFailed (string connectionString)
		{
			return Keys.GetString( Keys.ExceptionMessageDatabaseConnectionFailed, connectionString );
		}
		public static string ExceptionMessageConfigurationLoadFailed (string configFilename, string exceptionMessage)
		{
			return Keys.GetString( Keys.ExceptionMessageConfigurationLoadFailed, configFilename, exceptionMessage );
		}
		public static string ExceptionMessageNoDefault
		{
			get { return Keys.GetString( Keys.ExceptionMessageNoDefault ); }
		}
		public static string ExceptionMessageUpdateDataSetArgumentFailure
		{
			get { return Keys.GetString( Keys.ExceptionMessageUpdateDataSetArgumentFailure ); }
		}
		public static string ExceptionMessageUpdateDataSetRowFailure
		{
			get { return Keys.GetString( Keys.ExceptionMessageUpdateDataSetRowFailure ); }
		}
		public static string ExceptionNoInstance (string name)
		{
			return Keys.GetString( Keys.ExceptionNoInstance, name );
		}
		public static string ExceptionNoDatabaesType (string name)
		{
			return Keys.GetString( Keys.ExceptionNoDatabaesType, name );
		}
		public static string ExceptionNoConnectionStringType (string name)
		{
			return Keys.GetString( Keys.ExceptionNoConnectionStringType, name );
		}
		public static string ExceptionMessageParameterMatchFailure
		{
			get { return Keys.GetString( Keys.ExceptionMessageParameterMatchFailure ); }
		}
		public static string ExceptionMessageEmptyTableName
		{
			get { return Keys.GetString( Keys.ExceptionMessageEmptyTableName ); }
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Data.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Data.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, CultureInfo.CurrentUICulture );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, CultureInfo.CurrentUICulture );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string UserName = "UserName";
			public const string Password = "Password";
			public const string FactoryName = "FactoryName";
			public const string ExceptionMsg = "ExceptionMsg";
			public const string EventSource = "EventSource";
			public const string CounterCategory = "CounterCategory";
			public const string CounterCategoryHelp = "CounterCategoryHelp";
			public const string LogName = "LogName";
			public const string NumConnPerSec = "NumConnPerSec";
			public const string NumConnPerSecMsg = "NumConnPerSecMsg";
			public const string NumConnFailPerSec = "NumConnFailPerSec";
			public const string NumConnFailPerSecMsg = "NumConnFailPerSecMsg";
			public const string NumCmdsPerSec = "NumCmdsPerSec";
			public const string NumCmdsPerSecMsg = "NumCmdsPerSecMsg";
			public const string NumCmdsFailPerSec = "NumCmdsFailPerSec";
			public const string NumCmdsFailPerSecMsg = "NumCmdsFailPerSecMsg";
			public const string NumTransOpenPerSec = "NumTransOpenPerSec";
			public const string NumTransOpenPerSecMsg = "NumTransOpenPerSecMsg";
			public const string NumTransFailPerSec = "NumTransFailPerSec";
			public const string NumTransFailPerSecMsg = "NumTransFailPerSecMsg";
			public const string NumTransCommitPerSec = "NumTransCommitPerSec";
			public const string NumTransCommitPerSecMsg = "NumTransCommitPerSecMsg";
			public const string NumTransAbortPerSec = "NumTransAbortPerSec";
			public const string NumTransAbortPerSecMsg = "NumTransAbortPerSecMsg";
			public const string AvgCmdTime = "AvgCmdTime";
			public const string AvgCmdTimeMsg = "AvgCmdTimeMsg";
			public const string TotalCmd = "TotalCmd";
			public const string TotalCmdMsg = "TotalCmdMsg";
			public const string MessageConnection = "MessageConnection";
			public const string MessageDataConnectionOpened = "MessageDataConnectionOpened";
			public const string ExceptionConnectionStringNotSet = "ExceptionConnectionStringNotSet";
			public const string ExceptionParameterStringIsEmpty = "ExceptionParameterStringIsEmpty";
			public const string ExceptionCommandTypeNotValid = "ExceptionCommandTypeNotValid";
			public const string ExceptionTableNameArrayEmpty = "ExceptionTableNameArrayEmpty";
			public const string ExceptionTableNameEmpty = "ExceptionTableNameEmpty";
			public const string ExceptionExpectedType = "ExceptionExpectedType";
			public const string ExceptionDatabaseSettingsMissing = "ExceptionDatabaseSettingsMissing";
			public const string ExceptionMessageCreateServiceFailure = "ExceptionMessageCreateServiceFailure";
			public const string ExceptionMessageDatabaseCommandFailed = "ExceptionMessageDatabaseCommandFailed";
			public const string ExceptionMessageDatabaseConnectionFailed = "ExceptionMessageDatabaseConnectionFailed";
			public const string ExceptionMessageConfigurationLoadFailed = "ExceptionMessageConfigurationLoadFailed";
			public const string ExceptionMessageNoDefault = "ExceptionMessageNoDefault";
			public const string ExceptionMessageUpdateDataSetArgumentFailure = "ExceptionMessageUpdateDataSetArgumentFailure";
			public const string ExceptionMessageUpdateDataSetRowFailure = "ExceptionMessageUpdateDataSetRowFailure";
			public const string ExceptionNoInstance = "ExceptionNoInstance";
			public const string ExceptionNoDatabaesType = "ExceptionNoDatabaesType";
			public const string ExceptionNoConnectionStringType = "ExceptionNoConnectionStringType";
			public const string ExceptionMessageParameterMatchFailure = "ExceptionMessageParameterMatchFailure";
			public const string ExceptionMessageEmptyTableName = "ExceptionMessageEmptyTableName";
		}


	}
}
