#Region "Custom Namespace Imports"
Imports KTB.DNet.Domain
Imports KTB.DNet.BusinessFacade
Imports KTB.DNet.BusinessFacade.Buletin
Imports KTB.DNet.BusinessFacade.UserManagement
Imports KTB.DNet.BusinessFacade.Helper
Imports KTB.DNet.Utility
Imports KTB.DNet.Domain.Search
Imports KTB.DNet.Security
#End Region

Public Class PopUpUserGroup
    Inherits System.Web.UI.Page

#Region "Custom Variable Declaration"
    Private objUserGroupFacade As UserGroupFacade
    Private arlUserGroup As ArrayList = New ArrayList
    Private sHelper As SessionHelper = New SessionHelper
    Protected WithEvents btnChoose As System.Web.UI.HtmlControls.HtmlInputButton
    Protected WithEvents btnSaveBuletin As System.Web.UI.WebControls.Button
    Protected WithEvents PnlNonBuletin As System.Web.UI.WebControls.Panel
    Protected WithEvents PnlBuletin As System.Web.UI.WebControls.Panel

    Dim criterias As CriteriaComposite
#End Region

#Region " Web Form Designer Generated Code "

    'This call is required by the Web Form Designer.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub
    Protected WithEvents btnSearch As System.Web.UI.WebControls.Button
    Protected WithEvents dtgUserGroup As System.Web.UI.WebControls.DataGrid
    Protected WithEvents txtUserGroup As System.Web.UI.WebControls.TextBox

    'NOTE: The following placeholder declaration is required by the Web Form Designer.
    'Do not delete or move it.
    Private designerPlaceholderDeclaration As System.Object

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: This method call is required by the Web Form Designer
        'Do not modify it using the code editor.
        InitializeComponent()
    End Sub

#End Region

    Private Sub CreateCriteria()
        criterias = New CriteriaComposite(New Criteria(GetType(UserGroup), "RowStatus", MatchType.Exact, CType(DBRowStatus.Active, Short)))
        If txtUserGroup.Text <> String.Empty Then
            criterias.opAnd(New Criteria(GetType(UserGroup), "Description", MatchType.Partial, txtUserGroup.Text))
        End If
    End Sub

    Private Sub BindDatagrid(ByVal indexPage As Integer)
        Dim totalRow As Integer = 0

        If (indexPage >= 0) Then

            CreateCriteria()

            arlUserGroup = New UserGroupFacade(User).RetrieveActiveList(indexPage + 1, dtgUserGroup.PageSize, totalRow, CType(ViewState("CurrentSortColumn"), String), CType(ViewState("CurrentSortDirect"), Sort.SortDirection), criterias)

            dtgUserGroup.DataSource = arlUserGroup
            dtgUserGroup.VirtualItemCount = totalRow
            dtgUserGroup.DataBind()
            If dtgUserGroup.Items.Count > 0 Then
                btnChoose.Disabled = False
            Else
                btnChoose.Disabled = True
            End If
        End If
    End Sub

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        If Not IsPostBack Then
            ViewState("CurrentSortColumn") = "ID"
            ViewState("CurrentSortDirect") = Sort.SortDirection.ASC
            dtgUserGroup.DataSource = arlUserGroup
            dtgUserGroup.DataBind()
            SetPanel()
        End If
    End Sub

    Private Sub SetPanel()
        If Val(Request.QueryString("isBuletin")) = 1 Then
            PnlBuletin.Visible = True
            PnlNonBuletin.Visible = False
        Else
            PnlBuletin.Visible = False
            PnlNonBuletin.Visible = True
        End If
    End Sub

    Private Sub dtgUserGroup_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.DataGridItemEventArgs) Handles dtgUserGroup.ItemDataBound
        If e.Item.ItemIndex <> -1 Then
            If Not (arlUserGroup Is Nothing) Then
                Dim _lblNo As Label = CType(e.Item.FindControl("lblNo"), Label)
                _lblNo.Text = e.Item.ItemIndex + 1 + (dtgUserGroup.CurrentPageIndex * dtgUserGroup.PageSize)

            End If
        End If
    End Sub

    Private Sub btnSearch_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        dtgUserGroup.CurrentPageIndex = 0
        BindDatagrid(0)

    End Sub

    Private Sub dtgUserGroup_PageIndexChanged(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridPageChangedEventArgs) Handles dtgUserGroup.PageIndexChanged
        dtgUserGroup.CurrentPageIndex = e.NewPageIndex
        BindDatagrid(dtgUserGroup.CurrentPageIndex)
    End Sub

    Private Sub dtgUserGroup_SortCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridSortCommandEventArgs) Handles dtgUserGroup.SortCommand
        If e.SortExpression = ViewState("CurrentSortColumn") Then
            If ViewState("CurrentSortDirect") = Sort.SortDirection.ASC Then
                ViewState.Add("CurrentSortDirect", Sort.SortDirection.DESC)
            Else
                ViewState.Add("CurrentSortDirect", Sort.SortDirection.ASC)
            End If
        End If
        ViewState.Add("CurrentSortColumn", e.SortExpression)
        BindDatagrid(0)
    End Sub

    Private Sub btnSaveBuletin_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSaveBuletin.Click
        Dim arlDataSave As New ArrayList
        Dim id As Integer = CInt(Request.QueryString("id"))
        For Each item As DataGridItem In dtgUserGroup.Items
            Dim chkCek As CheckBox = CType(item.FindControl("chkItemChecked"), CheckBox)
            Dim lblGroupCode As Label = CType(item.FindControl("Label1"), Label)
            Dim lblCode As Label = item.FindControl("lblUserName")

            If chkCek.Checked = True Then

                'get Buletin
                Dim objBuletin As KTB.DNet.Domain.Buletin = New BuletinFacade(User).Retrieve(id)

                'get Group
                Dim objGroup As UserGroup = New UserGroupFacade(User).Retrieve(lblGroupCode.Text)
                'fill arlDataSave
                For Each itemUser As UserGroupMember In objGroup.UserGroupMembers
                    Dim obj As BuletinMember = New BuletinMember
                    obj.Buletin = objBuletin
                    obj.UserInfo = itemUser.UserInfo
                    'cek existing data
                    Dim criteriaCek As CriteriaComposite = New CriteriaComposite(New Criteria(GetType(BuletinMember), "RowStatus", MatchType.Exact, CType(DBRowStatus.Active, Short)))
                    criteriaCek.opAnd(New Criteria(GetType(BuletinMember), "Buletin.ID", MatchType.Exact, id))
                    criteriaCek.opAnd(New Criteria(GetType(BuletinMember), "UserInfo.ID", MatchType.Exact, itemUser.UserInfo.ID))
                    Dim arlCek As ArrayList = New BuletinMemberFacade(User).Retrieve(criteriaCek)
                    If arlCek.Count = 0 Then
                        arlDataSave.Add(obj)
                    End If
                Next


            End If
        Next

        If arlDataSave.Count > 0 Then
            Dim objBuletinMemberFacade As BuletinMemberFacade = New BuletinMemberFacade(User)
            objBuletinMemberFacade.InsertTransaction(arlDataSave)
        End If

        Response.Write("<script language='javascript'>window.close();</script>")
    End Sub
End Class
