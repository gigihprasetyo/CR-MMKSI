#region Summary
// ===========================================================================
// AUTHOR        : PT Mitrais 
// PURPOSE       : SAPCustomerProfile mapper class
// SPECIAL NOTES : DNet WebApi Project
// ---------------------
// Copyright  (c) 2018 
// ---------------------
// $History      : $
// Created on 23/9/2018 15:13
//
// ===========================================================================	
#endregion

#region Namespace Imports
using AutoMapper;
using KTB.DNet.Domain;
using KTB.DNet.Interface.Model;
#endregion

namespace KTB.DNet.Interface.BusinessLogic.MapperBL
{
    public class SAPCustomerProfile : Profile
    {
        public SAPCustomerProfile()
        {
            // CreateMap <source, destination>()
            // SAPCustomer 
            CreateMap<SAPCustomer, SAPCustomerDto>()
                .ForMember(dest => dest.ID, opt => opt.MapFrom(src => src.ID))
                .ForMember(dest => dest.CustomerCode, opt => opt.MapFrom(src => src.CustomerCode))
                .ForMember(dest => dest.CustomerType, opt => opt.MapFrom(src => src.CustomerType))
                .ForMember(dest => dest.CustomerName, opt => opt.MapFrom(src => src.CustomerName))
                .ForMember(dest => dest.CustomerAddress, opt => opt.MapFrom(src => src.CustomerAddress))
                .ForMember(dest => dest.Phone, opt => opt.MapFrom(src => src.Phone))
                .ForMember(dest => dest.Email, opt => opt.MapFrom(src => src.Email))
                .ForMember(dest => dest.Sex, opt => opt.MapFrom(src => src.Sex))
                .ForMember(dest => dest.AgeSegment, opt => opt.MapFrom(src => src.AgeSegment))
                .ForMember(dest => dest.CustomerPurpose, opt => opt.MapFrom(src => src.CustomerPurpose))
                .ForMember(dest => dest.InformationType, opt => opt.MapFrom(src => src.InformationType))
                .ForMember(dest => dest.InformationSource, opt => opt.MapFrom(src => src.InformationSource))
                .ForMember(dest => dest.Status, opt => opt.MapFrom(src => src.Status))
                .ForMember(dest => dest.Qty, opt => opt.MapFrom(src => src.Qty))
                .ForMember(dest => dest.ProspectDate, opt => opt.MapFrom(src => src.ProspectDate))
                .ForMember(dest => dest.IsSPK, opt => opt.MapFrom(src => src.isSPK))
                .ForMember(dest => dest.CurrVehicleBrand, opt => opt.MapFrom(src => src.CurrVehicleBrand))
                .ForMember(dest => dest.CurrVehicleType, opt => opt.MapFrom(src => src.CurrVehicleType))
                .ForMember(dest => dest.Note, opt => opt.MapFrom(src => src.Note))
                .ForMember(dest => dest.WebID, opt => opt.MapFrom(src => src.WebID))
                .ForMember(dest => dest.BirthDate, opt => opt.MapFrom(src => src.BirthDate))
                .ForMember(dest => dest.StateCode, opt => opt.MapFrom(src => src.StateCode))
                .ForMember(dest => dest.StatusCode, opt => opt.MapFrom(src => src.StatusCode))
                .ForMember(dest => dest.Description, opt => opt.MapFrom(src => src.Description))
                .ForMember(dest => dest.OriginatingLeadId, opt => opt.MapFrom(src => src.OriginatingLeadId))
                .ForMember(dest => dest.EstimatedCloseDate, opt => opt.MapFrom(src => src.EstimatedCloseDate))
                .ForMember(dest => dest.CreatedBy, opt => opt.MapFrom(src => src.CreatedBy))
                .ForMember(dest => dest.CreatedTime, opt => opt.MapFrom(src => src.CreatedTime))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdateTime))
                .ForMember(dest => dest.LastUpdateBy, opt => opt.MapFrom(src => src.LastUpdateBy))
                .ForMember(dest => dest.DealerCode, opt => opt.MapFrom(src => src.Dealer.DealerCode))
                .ForMember(dest => dest.SalesmanHeaderCode, opt => opt.MapFrom(src => src.SalesmanHeaderCode))
                .ForMember(dest => dest.VehicleTypeCode, opt => opt.MapFrom(src => src.VechileType.VechileTypeCode))
                .ForMember(dest => dest.LeadStatus, opt => opt.MapFrom(src => src.LeadStatus))
                .ForMember(dest => dest.PreferedVehicleModel, opt => opt.MapFrom(src => src.PreferedVehicleModel))
                .ForMember(dest => dest.CampaignCode, opt => opt.MapFrom(src => src.CampaignName))
                .ForAllOtherMembers(opt => opt.Ignore());

            CreateMap<SAPCustomer, SAPCustomerParameterDto>()
                .ForMember(dest => dest.CustomerCode, opt => opt.MapFrom(src => src.CustomerCode))
                .ForMember(dest => dest.CustomerType, opt => opt.MapFrom(src => src.CustomerType))
                .ForMember(dest => dest.CustomerName, opt => opt.MapFrom(src => src.CustomerName))
                .ForMember(dest => dest.CustomerAddress, opt => opt.MapFrom(src => src.CustomerAddress))
                .ForMember(dest => dest.Phone, opt => opt.MapFrom(src => src.Phone))
                .ForMember(dest => dest.Email, opt => opt.MapFrom(src => src.Email))
                .ForMember(dest => dest.Sex, opt => opt.MapFrom(src => src.Sex))
                .ForMember(dest => dest.AgeSegment, opt => opt.MapFrom(src => src.AgeSegment))
                .ForMember(dest => dest.CustomerPurpose, opt => opt.MapFrom(src => src.CustomerPurpose))
                .ForMember(dest => dest.InformationType, opt => opt.MapFrom(src => src.InformationType))
                .ForMember(dest => dest.InformationSource, opt => opt.MapFrom(src => src.InformationSource))
                .ForMember(dest => dest.Status, opt => opt.MapFrom(src => src.Status))
                .ForMember(dest => dest.Qty, opt => opt.MapFrom(src => src.Qty))
                .ForMember(dest => dest.ProspectDate, opt => opt.MapFrom(src => src.ProspectDate))
                .ForMember(dest => dest.IsSPK, opt => opt.MapFrom(src => src.isSPK))
                .ForMember(dest => dest.CurrVehicleBrand, opt => opt.MapFrom(src => src.CurrVehicleBrand))
                .ForMember(dest => dest.CurrVehicleType, opt => opt.MapFrom(src => src.CurrVehicleType))
                .ForMember(dest => dest.Note, opt => opt.MapFrom(src => src.Note))
                .ForMember(dest => dest.WebID, opt => opt.MapFrom(src => src.WebID))
                .ForMember(dest => dest.BirthDate, opt => opt.MapFrom(src => src.BirthDate))
                .ForMember(dest => dest.StatusCode, opt => opt.MapFrom(src => src.StatusCode))
                .ForMember(dest => dest.StateCode, opt => opt.MapFrom(src => src.StateCode))
                .ForMember(dest => dest.Description, opt => opt.MapFrom(src => src.Description))
                .ForMember(dest => dest.OriginatingLeadId, opt => opt.MapFrom(src => src.OriginatingLeadId))
                .ForMember(dest => dest.EstimatedCloseDate, opt => opt.MapFrom(src => src.EstimatedCloseDate))
                .ForMember(dest => dest.CreatedBy, opt => opt.MapFrom(src => src.CreatedBy))
                .ForMember(dest => dest.CreatedTime, opt => opt.MapFrom(src => src.CreatedTime))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdateTime))
                .ForMember(dest => dest.LastUpdateBy, opt => opt.MapFrom(src => src.LastUpdateBy))
                .ForMember(dest => dest.DealerID, opt => opt.MapFrom(src => src.Dealer.ID))
                .ForMember(dest => dest.VehicleTypeID, opt => opt.MapFrom(src => src.VechileType.ID))
                .ForMember(dest => dest.SalesmanHeaderID, opt => opt.MapFrom(src => src.SalesmanHeader.ID))
                .ForMember(dest => dest.LeadStatus, opt => opt.MapFrom(src => src.LeadStatus))
                .ForMember(dest => dest.PreferedVehicleModel, opt => opt.MapFrom(src => src.PreferedVehicleModel))
                .ForMember(dest => dest.CampaignCode, opt => opt.MapFrom(src => src.CampaignName))
                .ForAllOtherMembers(opt => opt.Ignore());

            // CreateMap <source, destination>()
            CreateMap<SAPCustomerParameterDto, SAPCustomer>()
                .ForMember(dest => dest.ID, opt => opt.MapFrom(src => src.ID))
                .ForMember(dest => dest.CustomerCode, opt => opt.MapFrom(src => src.CustomerCode))
                .ForMember(dest => dest.CustomerType, opt => opt.MapFrom(src => src.CustomerType))
                .ForMember(dest => dest.CustomerName, opt => opt.MapFrom(src => src.CustomerName))
                .ForMember(dest => dest.CustomerAddress, opt => opt.MapFrom(src => src.CustomerAddress))
                .ForMember(dest => dest.Phone, opt => opt.MapFrom(src => src.Phone))
                .ForMember(dest => dest.Email, opt => opt.MapFrom(src => src.Email))
                .ForMember(dest => dest.Sex, opt => opt.MapFrom(src => src.Sex))
                .ForMember(dest => dest.AgeSegment, opt => opt.MapFrom(src => src.AgeSegment))
                .ForMember(dest => dest.CustomerPurpose, opt => opt.MapFrom(src => src.CustomerPurpose))
                .ForMember(dest => dest.InformationType, opt => opt.MapFrom(src => src.InformationType))
                .ForMember(dest => dest.InformationSource, opt => opt.MapFrom(src => src.InformationSource))
                .ForMember(dest => dest.Status, opt => opt.MapFrom(src => src.Status))
                .ForMember(dest => dest.Qty, opt => opt.MapFrom(src => src.Qty))
                .ForMember(dest => dest.ProspectDate, opt => opt.MapFrom(src => src.ProspectDate))
                .ForMember(dest => dest.isSPK, opt => opt.MapFrom(src => src.IsSPK))
                .ForMember(dest => dest.CurrVehicleBrand, opt => opt.MapFrom(src => src.CurrVehicleBrand))
                .ForMember(dest => dest.CurrVehicleType, opt => opt.MapFrom(src => src.CurrVehicleType))
                .ForMember(dest => dest.Note, opt => opt.MapFrom(src => src.Note))
                .ForMember(dest => dest.WebID, opt => opt.MapFrom(src => src.WebID))
                .ForMember(dest => dest.BirthDate, opt => opt.MapFrom(src => src.BirthDate))
                //.ForMember(dest => dest.StateCode, opt => opt.MapFrom(src => src.StateCode))
                //.ForMember(dest => dest.StatusCode, opt => opt.MapFrom(src => src.StatusCode))
                .ForMember(dest => dest.Description, opt => opt.MapFrom(src => src.Description))
                .ForMember(dest => dest.OriginatingLeadId, opt => opt.MapFrom(src => src.OriginatingLeadId))
                .ForMember(dest => dest.EstimatedCloseDate, opt => opt.MapFrom(src => src.EstimatedCloseDate))
                .ForMember(dest => dest.CreatedBy, opt => opt.MapFrom(src => src.CreatedBy))
                .ForMember(dest => dest.CreatedTime, opt => opt.MapFrom(src => src.CreatedTime))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdateTime))
                .ForMember(dest => dest.LastUpdateBy, opt => opt.MapFrom(src => src.LastUpdateBy))
                .ForMember(dest => dest.LeadStatus, opt => opt.MapFrom(src => src.LeadStatus))
                .ForMember(dest => dest.PreferedVehicleModel, opt => opt.MapFrom(src => src.PreferedVehicleModel))
                .ForMember(dest => dest.CampaignName, opt => opt.MapFrom(src => src.CampaignCode))
                .ForAllOtherMembers(opt => opt.Ignore());

            CreateMap<SAPCustomer, KTB.DNet.Interface.Domain.SAPCustomer>()
                .ForMember(dest => dest.ID, opt => opt.MapFrom(src => src.ID))
                .ForMember(dest => dest.CustomerCode, opt => opt.MapFrom(src => src.CustomerCode))
                .ForMember(dest => dest.CustomerType, opt => opt.MapFrom(src => src.CustomerType))
                .ForMember(dest => dest.CustomerName, opt => opt.MapFrom(src => src.CustomerName))
                .ForMember(dest => dest.CustomerAddress, opt => opt.MapFrom(src => src.CustomerAddress))
                .ForMember(dest => dest.Phone, opt => opt.MapFrom(src => src.Phone))
                .ForMember(dest => dest.Email, opt => opt.MapFrom(src => src.Email))
                .ForMember(dest => dest.Sex, opt => opt.MapFrom(src => src.Sex))
                .ForMember(dest => dest.AgeSegment, opt => opt.MapFrom(src => src.AgeSegment))
                .ForMember(dest => dest.CustomerPurpose, opt => opt.MapFrom(src => src.CustomerPurpose))
                .ForMember(dest => dest.InformationType, opt => opt.MapFrom(src => src.InformationType))
                .ForMember(dest => dest.InformationSource, opt => opt.MapFrom(src => src.InformationSource))
                .ForMember(dest => dest.Status, opt => opt.MapFrom(src => src.Status))
                .ForMember(dest => dest.Qty, opt => opt.MapFrom(src => src.Qty))
                .ForMember(dest => dest.ProspectDate, opt => opt.MapFrom(src => src.ProspectDate))
                .ForMember(dest => dest.isSPK, opt => opt.MapFrom(src => src.isSPK))
                .ForMember(dest => dest.CurrVehicleBrand, opt => opt.MapFrom(src => src.CurrVehicleBrand))
                .ForMember(dest => dest.CurrVehicleType, opt => opt.MapFrom(src => src.CurrVehicleType))
                .ForMember(dest => dest.Note, opt => opt.MapFrom(src => src.Note))
                .ForMember(dest => dest.WebID, opt => opt.MapFrom(src => src.WebID))
                .ForMember(dest => dest.BirthDate, opt => opt.MapFrom(src => src.BirthDate))
                //.ForMember(dest => dest.StateCode, opt => opt.MapFrom(src => src.StateCode))
                //.ForMember(dest => dest.StatusCode, opt => opt.MapFrom(src => src.StatusCode))
                .ForMember(dest => dest.Description, opt => opt.MapFrom(src => src.Description))
                .ForMember(dest => dest.OriginatingLeadId, opt => opt.MapFrom(src => src.OriginatingLeadId))
                .ForMember(dest => dest.EstimatedCloseDate, opt => opt.MapFrom(src => src.EstimatedCloseDate))
                .ForMember(dest => dest.CreatedBy, opt => opt.MapFrom(src => src.CreatedBy))
                .ForMember(dest => dest.CreatedTime, opt => opt.MapFrom(src => src.CreatedTime))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdateTime))
                .ForMember(dest => dest.LastUpdateBy, opt => opt.MapFrom(src => src.LastUpdateBy))
                .ForMember(dest => dest.LeadStatus, opt => opt.MapFrom(src => src.LeadStatus))
                .ForMember(dest => dest.PreferedVehicleModel, opt => opt.MapFrom(src => src.PreferedVehicleModel))
                .ForMember(dest => dest.CampaignName, opt => opt.MapFrom(src => src.CampaignName))
                .ForMember(dest => dest.SalesforceID, opt => opt.MapFrom(src => src.SalesforceID))
                //.ForMember(dest => dest.VechileModelID, opt => opt.MapFrom(src => src.VechileModel.ID))
                .ForMember(dest => dest.Variant, opt => opt.MapFrom(src => src.Variants))
                .ForMember(dest => dest.Sequence, opt => opt.MapFrom(src => src.Sequence))
                .ForMember(dest => dest.Name2, opt => opt.MapFrom(src => src.Name2))
                .ForMember(dest => dest.PhoneType, opt => opt.MapFrom(src => src.PhoneType))
                .ForMember(dest => dest.Telp, opt => opt.MapFrom(src => src.Telp))
                .ForMember(dest => dest.IdentityType, opt => opt.MapFrom(src => src.IdentityType))
                .ForMember(dest => dest.IdentityNumber, opt => opt.MapFrom(src => src.IdentityNumber))
                .ForMember(dest => dest.JobKind, opt => opt.MapFrom(src => src.JobKind))
                //.ForMember(dest => dest.VechileColorID, opt => opt.MapFrom(src => src.VechileColor.ID))
                //.ForMember(dest => dest.DealerVehiclePriceDetailID, opt => opt.MapFrom(src => src.DealerVehiclePriceDetail.ID))
                .ForMember(dest => dest.CusReqPrice, opt => opt.MapFrom(src => src.CusReqPrice))
                .ForMember(dest => dest.CusReqDiscount, opt => opt.MapFrom(src => src.CusReqDiscount))
                .ForMember(dest => dest.BookingFee, opt => opt.MapFrom(src => src.BookingFee))
                .ForMember(dest => dest.BBNType, opt => opt.MapFrom(src => src.BBNType))
                .ForMember(dest => dest.BlankoSPKNo, opt => opt.MapFrom(src => src.BlankoSPKNo))
                .ForMember(dest => dest.BlankoSPKDoc, opt => opt.MapFrom(src => src.BlankoSPKDoc))
                .ForMember(dest => dest.Topic, opt => opt.MapFrom(src => src.Topic))
                .ForMember(dest => dest.CurrVehicleBrandDesc, opt => opt.MapFrom(src => src.CurrVehicleBrandDesc))
                .ForMember(dest => dest.VehicleComparison, opt => opt.MapFrom(src => src.VehicleComparison))
                .ForMember(dest => dest.CountryCode, opt => opt.MapFrom(src => src.CountryCode))
                .ForMember(dest => dest.Rating, opt => opt.MapFrom(src => src.Rating))
                .ForMember(dest => dest.RowStatus, opt => opt.MapFrom(src => src.RowStatus))
                .ForMember(dest => dest.InterfaceStatus, opt => opt.MapFrom(src => src.InterfaceStatus))
                .ForMember(dest => dest.GUIDUpdate, opt => opt.MapFrom(src => src.GUIDUpdate))
                .ForMember(dest => dest.InterfaceMessage, opt => opt.MapFrom(src => src.InterfaceMessage))
                .ForAllOtherMembers(opt => opt.Ignore());

        }
    }
}
